---
import { CreateRoom } from "~libs/game-room/components/CreateRoom";
import { Login } from "~libs/auth/components/Login";
import { SignUp } from "~libs/auth/components/SignUp";
import { SignOut } from "~libs/auth/components/SignOut";
import { db } from "~libs/drizzle-orm/db";
import { gameRoom } from "drizzle/schemas/schema";
import { eq } from "drizzle-orm";

const session = Astro.locals.session;
const user = Astro.locals.user;

export async function getGameRoomsForUser(userId: string) {
  const gameRooms = await db.select().from(gameRoom);
  return gameRooms;
}
// const currentUserId = Astro.locals.pb.authStore.model?.id;
// const userName = Astro.locals.pb.authStore.model?.name;

const gameRooms = user?.id ? await getGameRoomsForUser(user.id) : [];
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Big Two! v2</title>
  </head>
  <body>
    <h1></h1>

    <div class="navbar bg-base-100">
      {
        user && (
          <a class="btn btn-ghost text-xl">
            Hello {user.name} | <code>{user.id}</code>
          </a>
        )
      }
    </div>

    <div class="flex w-full flex-col border-opacity-50">
      <div class="card bg-base-300 rounded-box grid h-20 place-items-center">
        <Login client:load />
      </div>
      <div class="divider">OR</div>
      <div class="card bg-base-300 rounded-box grid h-20 place-items-center">
        Sign Up
        <SignUp client:load />
      </div>
    </div>

    <div class="divider divider-accent">Create a room</div>

    <CreateRoom client:load />

    <!-- <a href="/api/signout"> Sign out </a> -->

    <SignOut client:load />

    <div class="divider divider-accent">
      <h1>Rooms({gameRooms?.length})</h1>
    </div>

    {
      gameRooms?.map((room) => {
        return (
          <div>
            <a href={`/${room.id}`}> {room.roomName}</a> | Room created by
            <code>{room.creatorId}</code>
          </div>
        );
      })
    }
  </body>
</html>
<script>
  import { honoClient } from "~libs/hono-actions";

  honoClient.api.test.$get().then(async (resp) => {
    console.log("ðŸš€ ~ json:", await resp.json());
  });
</script>
